services:
  postgres: &postgres
    container_name: postgres
    build:
      context: .
      dockerfile: Dockerfile.pgtap
      args:
        POSTGRES_VERSION: "17"
    ports:
      - 7432:7432
    environment:
      - PGPORT=${POSTGRES_PORT}
      - PGUSER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - postgres
    deploy:
      resources:
        limits:
          cpus: "${CPU_LIMIT:-2}"
          memory: 2048mb
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

  postgres-17:
    <<: *postgres
    build:
      context: .
      dockerfile: Dockerfile.pgtap
      args:
        POSTGRES_VERSION: "17"
    container_name: postgres-17
    #volumes: # uncomment if you need to inspect the container contents
    #- ./pg/data-17:/var/lib/postgresql/data

  postgres-16:
    <<: *postgres
    build:
      context: .
      dockerfile: Dockerfile.pgtap
      args:
        POSTGRES_VERSION: "16"
    container_name: postgres-16

  postgres-15:
    <<: *postgres
    build:
      context: .
      dockerfile: Dockerfile.pgtap
      args:
        POSTGRES_VERSION: "15"
    container_name: postgres-15

  postgres-14:
    <<: *postgres
    build:
      context: .
      dockerfile: Dockerfile.pgtap
      args:
        POSTGRES_VERSION: "14"
    container_name: postgres-14

networks:
  postgres:
    driver: bridge

