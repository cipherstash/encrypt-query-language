[settings]
# Config for test environments
# Can be invoked with: mise --env tcp run <task>
# trusted_config_paths = [
#     "./tests/mise.toml",
#     "./tests/mise.tcp.toml",
#     "./tests/mise.tls.toml",
# ]
[task_config]
includes = [
  "tasks",
  "tasks/postgres.toml",
]

[env]
POSTGRES_DB = "cipherstash"
POSTGRES_USER = "cipherstash"
POSTGRES_PASSWORD = "password"
POSTGRES_HOST = "localhost"
POSTGRES_PORT = "7432"

[tasks."clean"]
alias = 'k'
description = "Clean release"
run = """
  rm -f release/cipherstash-encrypt-uninstall.sql
  rm -f release/cipherstash-encrypt.sql
"""

[tasks."test:legacy"]
description = "Run legacy SQL tests (inline test files)"
sources = ["src/**/*_test.sql", "tests/*.sql"]
run = "{{config_root}}/tasks/test-legacy.sh"

[tasks."test:sqlx"]
description = "Run SQLx tests with hybrid migration approach"
dir = "{{config_root}}"
env = { DATABASE_URL = "postgresql://{{get_env(name='POSTGRES_USER', default='cipherstash')}}:{{get_env(name='POSTGRES_PASSWORD', default='password')}}@{{get_env(name='POSTGRES_HOST', default='localhost')}}:{{get_env(name='POSTGRES_PORT', default='7432')}}/{{get_env(name='POSTGRES_DB', default='cipherstash')}}" }
run = """
# Copy built SQL to SQLx migrations (EQL install is generated, not static)
echo "Updating SQLx migrations with built EQL..."
cp release/cipherstash-encrypt.sql tests/sqlx/migrations/001_install_eql.sql

# Run SQLx migrations and tests
echo "Running SQLx migrations..."
cd tests/sqlx
sqlx migrate run

echo "Running Rust tests..."
cargo test
"""

[tasks."test:sqlx:watch"]
description = "Run SQLx tests in watch mode (rebuild EQL on changes)"
dir = "{{config_root}}/tests/sqlx"
run = """
cargo watch -x test
"""
